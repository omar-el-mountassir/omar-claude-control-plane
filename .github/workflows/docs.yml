name: Documentation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  docs-compliance:
    name: 150-Word Documentation Compliance
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
    - name: Install dependencies
      run: |
        uv sync
        
    - name: Generate Agent Documentation
      run: |
        uv run python scripts/gen_agent_docs.py
        
    - name: Check 150-Word Compliance
      run: |
        echo "Checking all agent documentation for 150-word compliance..."
        compliance_failures=0
        
        for doc in docs/docs/agents/*.md; do
          if [ -f "$doc" ]; then
            word_count=$(grep -o "Word Count: [0-9]*" "$doc" | cut -d' ' -f3)
            agent_name=$(basename "$doc" .md)
            
            if [ "$word_count" -gt 150 ]; then
              echo "‚ùå FAIL: $agent_name ($word_count/150 words)"
              compliance_failures=$((compliance_failures + 1))
            else
              echo "‚úÖ PASS: $agent_name ($word_count/150 words)"
            fi
          fi
        done
        
        if [ $compliance_failures -gt 0 ]; then
          echo "üö® $compliance_failures agents exceed 150-word limit!"
          echo "Fix documentation before merge."
          exit 1
        else
          echo "üéâ All agents comply with 150-word standard!"
        fi
        
    - name: Build MkDocs Site
      run: |
        cd docs
        uv run mkdocs build
        
    - name: Test Documentation Links
      run: |
        cd docs
        # Check for broken internal links in generated site
        find site -name "*.html" -exec grep -l "href.*\.md" {} \; | wc -l || true
        
  deploy-docs:
    name: Deploy Documentation Site
    runs-on: ubuntu-latest
    needs: docs-compliance
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
    - name: Install dependencies
      run: |
        uv sync
        
    - name: Generate Agent Documentation
      run: |
        uv run python scripts/gen_agent_docs.py
        
    - name: Build MkDocs Site
      run: |
        cd docs
        uv run mkdocs build
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: 'docs/site'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2